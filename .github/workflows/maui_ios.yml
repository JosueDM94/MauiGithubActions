# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build .NET MAUI iOS

on:
  push:
    branches: 
      - main
      - dev
  pull_request:
    branches: 
      - main
      - dev

jobs:
  build:

    runs-on: macos-latest

    steps:
    
    - name: GitHub Checkout
      uses: actions/checkout@v4

    - name: Install the Apple certificate and provisioning profile
      env:
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        APPLE_PROVISION_PROFILE: ${{ secrets.APPLE_PROVISION_PROFILE }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        APPLE_CERTIFICATE_PATH=$RUNNER_TEMP/apple.p12
        APPLE_PROVISION_PROFILE_PATH=$RUNNER_TEMP/apple.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$APPLE_CERTIFICATE" | base64 --decode --output $APPLE_CERTIFICATE_PATH
        echo -n "$APPLE_PROVISION_PROFILE" | base64 --decode --output $APPLE_PROVISION_PROFILE_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $APPLE_CERTIFICATE_PATH -P "$APPLE_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $APPLE_PROVISION_PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Select Xcode Version
      run: sudo xcode-select -s /Applications/Xcode_16.app
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x
        
    - name: Install .NET MAUI Workload
      run: dotnet workload install maui
    
    - name: Update App Version
      uses: managedcode/MAUIAppVersion@v1.1.0
      with:    
        csproj: MauiGithubActions.csproj
        version: ${{ github.run_number }}
        displayVersion: ${{ vars.APP_VERSION }}
        printFile: true     
      
    - name: Publish iOS App
      run: dotnet publish MauiGithubActions.csproj -f net8.0-ios -c Release -p:ArchiveOnBuild=true -p:RuntimeIdentifier=ios-arm64
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-ios
        path: |
          ./**/publish/*.*
          
    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        rm ~/Library/MobileDevice/Provisioning\ Profiles/apple.mobileprovision
